# White_Boarding
 
Question #1: Turning Strings to URLs
URLs cannot have spaces. Instead, all spaces in a string are replaced with %20. Write an algorithm that replaces all spaces in a string with %20.

You may not use the replace() method or regular expressions to solve this problem. Solve the problem with and without recursion.

Example
Input: "Jasmine Ann Jones"

Output: "Jasmine%20Ann%20Jones"

//Questions

Are you okay if I solve this problem with JavaScript?
Can I assume the input will only be strings?
Will I only be replacing the spaces with %20?
will there be double spaces? if so should I put %20 twice or once for both?
what if there are spaces on the beginning and end? => .trim()


//Code

without .replace

function replaceSpaces(string) {          // Time complexity o(n);
  let stringOutput = "";                  // instantiate variable to be equal to an empty string.

  for (let i = 0; i < string.length; i++) {  //look for spaces w/ for loop.
    if (url[i] === " ") {                 // replaces spaces w/ %20
      stringOutput += "%20";
    } else {
      stringOuput += string[i];              //else character
    }
  }
    return stringOutput;                  // return updated string to URLs
}

example with replace All
function replace(string) {
    string.replaceAll(" ", "%20");
    return string;
}

function replaceSpaces(string)
{
  let replacedChar = "%20"
  for(let i =0; i < input.length; i++)
  {
    if(url[i] == " ")
      url = url.replace(string[i], replacedChar);
  }
  return string;
}

  replaceSpaces("Jasmine Ann Jones");


function urlCreator (string) {
    const stringArr = string.split(" ");

}

Question #3: Compressing Strings
Write an algorithm that takes a string with repeated characters and compresses them, using a number to show how many times the repeated character has been compressed. For instance, aaa would be written as 3a. Solve the problem with and without recursion.

//Questions
Are there going to numbers and letters or just letters?
JavaScript?
You want the number listed first?
Do I count all the characters seperatley.  As ie  aaa vs a at the end?
Sort alphabetically?
Can I use built in methods?

Example
Input: "aaabccdddda"

Output: "3ab2c4da"

function compress(string) {
  let outputString = "";          //instantiate an empty string
  let currentLetter = string[0];     //set currentLetter to string at the first index
  let count = 1;                      // set count = 1
  
  for (let i = 1; i < string.length; i++) {     //Create a for loop that set index to 1.  If index is less than string length then we incremenete by 1
    if (string[i] === currentLetter) {          // If string at the current index is equal to currentLetter we increase count by 1.
        count++;              
    } else if (count > 1) {                           // If the count is greater than 1 then we set outputString += to count + currentLetter.
        outputString += count + currentLetter;        //Then we set currentLetter = string at that index.
      currentLetter = string[i];                      
      count = 1;                                      //And set the count to 1.
    } else {
        outputString += currentLetter;                // In our else catch we set outString += currentLetter
      currentLetter = string[i];                      // Then we set currentletter = string[i]
    }
  }
  if (count === 1) {                                          
      outputString += currentLetter;
  } else {
      outputString += count + currentLetter;
  }
  console.log(outputString);
}

compress("aaabccdddda");


var compress = function(chars) {    
    let count = 1                 //set intial count to 1
    let result = ""               // set result to an empty string
      for (let i = 0; i < chars.length; i++) {        // create a for loop and set index to 0.  if index is less than chars.length increment by one?
        let currentChar = chars[i];
        let nextChar = chars[i + 1];        
          if (currentChar === nextChar) {
            count ++
        } else {                                   //This is a conditional terenary opertator and acts as out if else statement.
        		const valueToBeAdded = count === 1 ? chars[i] : count + chars[i]     
            result += valueToBeAdded
            count = 1
        }
    }
    console.log(result)

};
   compress("aaabccdddda");


function compress(message){
  let compressedString = ""
  let messageArray = message.split("")
  for (let i = 0; i < messageArray.length; i++){
    let count = 1
    let currentLetter = messageArray[i]
    while (i < messageArray.length - 1 && messageArray[i] === messageArray[i + 1]){
      count++
      i++
    }
    if (count === 1){                                     
      compressedString += currentLetter
    } else {
      compressedString += currentLetter + count
    }
  }
  return compressedString
}
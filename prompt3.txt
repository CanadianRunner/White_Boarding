Question #3: Compressing Strings
Write an algorithm that takes a string with repeated characters and compresses them, using a number to show how many times the repeated character has been compressed. For instance, aaa would be written as 3a. Solve the problem with and without recursion.

Example
Input: "aaabccdddda"

Output: "3ab2c4da"

let compressedString = function(input) {
  if (!input.length) return 0;
  let j = 0;
  let chars = input[0];
  let counter = 0;
  for (let i = 0; i <= input.length; i++) {
    if (input[i] === chars) {
      counter++;
    } else {
      input[r] = chars;
      if (counter > 1) {
        const counterString = counter.toString();
        for (let j = 0; j < counterString.length; j++) chars[++r] = counterString[j];
      }
      r++;
      chars = input[i];
      counter = 1;
    }
  }
  return r;
};